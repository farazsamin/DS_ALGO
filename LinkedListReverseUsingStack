#include<iostream>
#include<stack>
using namespace std;


struct node {
    int data;
    node * next;
};


//insert at the last of the list using pointer
node* Insert(node* head,int x){
    node* temp = new node;
    temp-> data = x;
    temp-> next = NULL;
    if(head==NULL) head = temp;
    else {
      node* temp2 = head;
      while(temp2->next != NULL){
        temp2 = temp2->next;
      }
      temp2->next = temp;
    }
    return head;
}

//Reverse Function using Stack
void Reverse(node* head){
    if(head==NULL) return;
    stack<node*>S;
    node* temp= head;
    while(temp!=NULL){
        S.push(temp);
        temp= temp->next;
    }
    temp= S.top();
    head= temp;
    S.pop();
    while(!S.empty()){
        temp->next= S.top();
        S.pop();
        temp= temp->next;
    }
    temp->next=NULL;

    //Print
    node* temp2= head;
    while(temp2!=NULL){
        cout<<temp2->data<<" ";
        temp2= temp2->next;
    }
}



int main(){
  node * head= NULL;
  head = Insert(head,10);
  head = Insert(head,3);
  head = Insert(head,5);
  head = Insert(head,0);
  Reverse(head);

}

/*
4
4 6 8 2
*/
